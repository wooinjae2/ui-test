[{"/Users/a31/git/ui-test/react-router-practice/src/index.js":"1","/Users/a31/git/ui-test/react-router-practice/src/App.js":"2","/Users/a31/git/ui-test/react-router-practice/src/pages/AllQuotes.js":"3","/Users/a31/git/ui-test/react-router-practice/src/pages/QuoteDetail.js":"4","/Users/a31/git/ui-test/react-router-practice/src/pages/NewQuote.js":"5","/Users/a31/git/ui-test/react-router-practice/src/components/comments/Comments.js":"6","/Users/a31/git/ui-test/react-router-practice/src/components/comments/NewCommentForm.js":"7","/Users/a31/git/ui-test/react-router-practice/src/components/layout/Layout.js":"8","/Users/a31/git/ui-test/react-router-practice/src/components/layout/MainNavigation.js":"9","/Users/a31/git/ui-test/react-router-practice/src/components/quotes/QuoteList.js":"10","/Users/a31/git/ui-test/react-router-practice/src/components/quotes/QuoteItem.js":"11","/Users/a31/git/ui-test/react-router-practice/src/components/quotes/QuoteForm.js":"12","/Users/a31/git/ui-test/react-router-practice/src/components/UI/Card.js":"13","/Users/a31/git/ui-test/react-router-practice/src/components/UI/LoadingSpinner.js":"14","/Users/a31/git/ui-test/react-router-practice/src/components/quotes/HighlightedQuote.js":"15","/Users/a31/git/ui-test/react-router-practice/src/pages/NotFound.js":"16","/Users/a31/git/ui-test/react-router-practice/src/hooks/use-http.js":"17","/Users/a31/git/ui-test/react-router-practice/src/lib/api.js":"18","/Users/a31/git/ui-test/react-router-practice/src/components/quotes/NoQuotesFound.js":"19","/Users/a31/git/ui-test/react-router-practice/src/components/comments/CommentsList.js":"20","/Users/a31/git/ui-test/react-router-practice/src/components/comments/CommentItem.js":"21"},{"size":237,"mtime":1629714394847,"results":"22","hashOfConfig":"23"},{"size":1692,"mtime":1630321870258,"results":"24","hashOfConfig":"23"},{"size":1045,"mtime":1630136489584,"results":"25","hashOfConfig":"23"},{"size":1628,"mtime":1630137885934,"results":"26","hashOfConfig":"23"},{"size":744,"mtime":1630135481923,"results":"27","hashOfConfig":"23"},{"size":1710,"mtime":1630140096274,"results":"28","hashOfConfig":"23"},{"size":1382,"mtime":1630139788714,"results":"29","hashOfConfig":"23"},{"size":305,"mtime":1629715240454,"results":"30","hashOfConfig":"23"},{"size":574,"mtime":1629715315647,"results":"31","hashOfConfig":"23"},{"size":1475,"mtime":1630134702036,"results":"32","hashOfConfig":"23"},{"size":455,"mtime":1629716830807,"results":"33","hashOfConfig":"23"},{"size":1924,"mtime":1629718283146,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1616596573000,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1616596573000,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1616596573000,"results":"37","hashOfConfig":"23"},{"size":135,"mtime":1629717361418,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1616590605000,"results":"39","hashOfConfig":"23"},{"size":2164,"mtime":1630136101094,"results":"40","hashOfConfig":"23"},{"size":346,"mtime":1630136591020,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1616596573000,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1616596573000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"dtp2gn",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/a31/git/ui-test/react-router-practice/src/index.js",[],["92","93"],"/Users/a31/git/ui-test/react-router-practice/src/App.js",[],"/Users/a31/git/ui-test/react-router-practice/src/pages/AllQuotes.js",["94"],"import { useEffect } from 'react';\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Woo\", text: \"Learning React is Great!\" },\n];\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data : loadedQuote, error} = useHttp(getAllQuotes, true);\n\n  useEffect(()=>{\n      sendRequest()\n  },[sendRequest])\n\n  if(status ==='pending'){\n      <div className=\"centered\">\n          <LoadingSpinner/>\n      </div>\n  }\n\n  if(error){\n      return <p className=\"centered focused\">{error}</p>\n  }\n\n  if(status === 'completed' && (!loadedQuote || loadedQuote.length === 0)){\n      return <NoQuotesFound/>\n  }\n\n  console.log(loadedQuote)\n\n  return <QuoteList quotes={loadedQuote ? loadedQuote : []} />;\n};\n\nexport default AllQuotes;\n","/Users/a31/git/ui-test/react-router-practice/src/pages/QuoteDetail.js",["95"],"import { Fragment } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { getSingleQuote} from '../lib/api';\nimport { useEffect } from 'react';\n\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Woo\", text: \"Learning React is Great!\" },\n];\nconst QuoteDetail = () => {\n  const params = useParams();\n  const match = useRouteMatch();\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n  console.log(match);\n\n  useEffect(()=>{\n      console.log(params.quoteId);\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId])\n\n  if(status ==='pending'){\n      return <div className=\"centered\">\n          <LoadingSpinner/>\n      </div>\n  }\n\n  if(error){\n      return <p className=\"centerd\"> {error}</p>\n  }\n\n  console.log(loadedQuote);\n  if(!loadedQuote.text){\n      return <p>No quote Found</p>\n  }\n\n  \n  return (\n    <Fragment>\n        <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\n        <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n            <Link className=\"btn-flat\" to={`${match.url}/comments`}>Load Comments</Link>\n        </div>\n        </Route>\n        \n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","/Users/a31/git/ui-test/react-router-practice/src/pages/NewQuote.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/comments/Comments.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/comments/NewCommentForm.js",["96"],"import { useEffect, useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { useParams } from 'react-router';\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error } = useHttp(addComment);\n  const { onAddComment} = props;\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      commentData: {text: enteredText,\n    }, quoteId: props.quoteId});\n  };\n\n  useEffect(()=>{\n    if(status === 'completed' && !error){\n      onAddComment();\n    }\n\n  },[status, error, onAddComment])\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className=\"centered\"><LoadingSpinner/></div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","/Users/a31/git/ui-test/react-router-practice/src/components/layout/Layout.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/layout/MainNavigation.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/quotes/QuoteList.js",["97"],"import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  \n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n\n  console.log(location);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending? 'desc' : 'asc')}`\n    })\n    //history.push(`${location.pathname}`);\n  }\n\n  //Query Parameter에 따른 정렬\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}></div>\n      <button onClick={changeSortingHandler}>Sort {isSortingAscending? 'Descending': 'Ascending'}</button>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","/Users/a31/git/ui-test/react-router-practice/src/components/quotes/QuoteItem.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/quotes/QuoteForm.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/UI/Card.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/UI/LoadingSpinner.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/quotes/HighlightedQuote.js",[],"/Users/a31/git/ui-test/react-router-practice/src/pages/NotFound.js",[],"/Users/a31/git/ui-test/react-router-practice/src/hooks/use-http.js",[],"/Users/a31/git/ui-test/react-router-practice/src/lib/api.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/quotes/NoQuotesFound.js",["98"],"import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className='btn'>\n        <Link to='new-quote'>Add a Quote</Link>\n        \n      </a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","/Users/a31/git/ui-test/react-router-practice/src/components/comments/CommentsList.js",[],"/Users/a31/git/ui-test/react-router-practice/src/components/comments/CommentItem.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":7,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":10,"column":7,"nodeType":"105","messageId":"106","endLine":10,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":2,"column":35,"nodeType":"105","messageId":"106","endLine":2,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":8,"column":7,"nodeType":"111","endLine":8,"endColumn":26},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'DUMMY_QUOTES' is assigned a value but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]